let mongoose,redis,cors,express,session,home,auth,bitcoin,market,bodyParser;_a97‍.x([["app",()=>app],["redisClient",()=>redisClient]]);_a97‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_a97‍.w("redis",[["default",["redis"],function(v){redis=v}]]);_a97‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_a97‍.w("express",[["default",["express"],function(v){express=v}]]);_a97‍.w("express-session",[["default",["session"],function(v){session=v}]]);_a97‍.w("./app/api/home",[["default",["home"],function(v){home=v}]]);_a97‍.w("./app/api/auth/auth",[["default",["auth"],function(v){auth=v}]]);_a97‍.w("./app/api/bitcoin/bitcoin",[["default",["bitcoin"],function(v){bitcoin=v}]]);_a97‍.w("./app/api/bitcoin/market",[["default",["market"],function(v){market=v}]]);_a97‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);










       const app = express();

       const redisClient = redis.createClient();
const redisStore = require('connect-redis')(session);

const url = "mongodb://localhost:27017/kriptovalute"
mongoose.connect(url, {useNewUrlParser: true, useUnifiedTopology: true});

const db = mongoose.connection;
db.on('error', _a97‍.g.console.error.bind(_a97‍.g.console, 'MongoDb connection error: '));

const corsOptions = {
  origin: "http://localhost:3000"
};

app.use(session({
  secret: 'redis secret',
  store: new redisStore({ host: 'localhost', port: 6379, client: redisClient }),
  saveUninitialized: false,
  resave: false
}));

app.use(cors(corsOptions));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use('/', home);
app.use('/auth', auth);
app.use('/bitcoin', bitcoin);
app.use('/bitcoin/market', market);

const hostname = '127.0.0.1';
const port = 8080;

app.listen(port, function() {
    console.log(`Server running at http://${hostname}:${port}/`);
});
